import { NextResponse } from 'next/server'
import { spawn } from 'child_process'
import { PassThrough } from 'stream'

export async function GET(request: Request) {
  const { searchParams } = new URL(request.url)
  const videoId = searchParams.get('videoId')

  if (!videoId) {
    return NextResponse.json({ error: 'Video ID is required' }, { status: 400 })
  }

  try {
    const videoUrl = `https://www.youtube.com/watch?v=${videoId}`
    const stream = new PassThrough()
    
    const ytDlp = spawn('yt-dlp', [
      videoUrl,
      '-f', 'bestaudio',
      '-o', '-',
      '--extract-audio',
      '--audio-format', 'mp3'
    ])

    ytDlp.stdout.pipe(stream)
    
    ytDlp.stderr.on('data', (data) => {
      console.error(`yt-dlp error: ${data}`)
    })

    const headers = new Headers()
    headers.set('Content-Type', 'audio/mpeg')
    headers.set('Content-Disposition', `attachment; filename="${videoId}.mp3"`)

    return new NextResponse(stream as any, { headers })
  } catch (error) {
    console.error('Download error:', error)
    return NextResponse.json({ error: 'Failed to download video' }, { status: 500 })
  }
}

